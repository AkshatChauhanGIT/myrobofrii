{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","React","createElement","className","alt","src","concat","CardList","robots","cardComp","map","user","i","key","SearchBox","searchField","searchChange","type","placeholder","onChange","App","Component","constructor","super","this","onSearchChange","event","setState","target","value","state","componentDidMount","fetch","then","response","json","users","render","filtered","filter","robot","toLowerCase","includes","toLocaleLowerCase","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"qkCAEe,SAASA,EAAIC,GAAkB,IAAjBC,GAACA,EAAEC,KAACA,EAAIC,MAACA,GAAMH,EAC1C,OACEI,IAAAC,cAAA,OAAKC,UAAW,uDACdF,IAAAC,cAAA,OAAKE,IAAI,MAAMC,IAAG,wBAAAC,OAA2BR,EAAE,cAC/CG,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKH,GACLE,IAAAC,cAAA,SAAIF,KCMGO,MAVEV,IAAgB,IAAfW,OAAEA,GAAQX,EAC1B,MAAMY,EAAWD,EAAOE,IAAI,CAACC,EAAMC,IAC1BX,IAAAC,cAACN,EAAI,CAACiB,IAAKD,EAAGd,GAAIU,EAAOI,GAAGd,GAAIC,KAAMS,EAAOI,GAAGb,KAAMC,MAAOQ,EAAOI,GAAGZ,SAEhF,OACEC,IAAAC,cAAA,WACGO,ICRQ,SAASK,EAASjB,GAA+B,IAA9BkB,YAACA,EAAWC,aAAGA,GAAanB,EAC5D,OACEI,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,SACEC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,WC+CHI,MAhDf,cAAkBnB,IAAMoB,UACtBC,cACEC,QAAQC,KAYVC,eAAkBC,KAChBF,KAAKG,SAAS,CAAEZ,YAAaW,EAAME,OAAOC,UAZ1CL,KAAKM,MAAQ,CACXtB,OAAQA,EACRO,YAAa,IAGjBgB,oBACEC,MAAM,8CACHC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAASZ,KAAKG,SAAS,CAAEnB,OAAQ4B,KAM3CC,SACE,MAAM7B,OAAEA,EAAMO,YAAEA,GAAgBS,KAAKM,MAC/BQ,EAAW9B,EAAO+B,OAAQC,GACvBA,EAAMzC,KAAK0C,cAAcC,SAAS3B,EAAY4B,sBAEvD,OAAQnC,EAAOoC,OAGX3C,IAAAC,cAAA,OAAKC,UAAU,MACbF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAACY,EAAS,CAACE,aAAcQ,KAAKC,iBAC9BxB,IAAAC,cAACK,EAAQ,CAACC,OAAQ8B,KANArC,IAAAC,cAAA,UAAI,gBClBjB2C,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhB,KAAAe,EAAAE,KAAA,UAAqBjB,KAAKpC,IAAiD,IAAhDsD,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS1D,EACpEsD,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCADU,IAASC,WAAWC,SAASC,eAAe,SACpDtB,OACHpC,IAAAC,cAACD,IAAM2D,WAAU,KACf3D,IAAAC,cAACkB,EAAG,QAORyB","file":"static/js/main.9504f965.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Card({id,name,email}) {\r\n  return (\r\n    <div className =\"tc bg-light-green dib br3 pd3 ma3 grow bw2 shadow-5\">\r\n      <img alt=\"img\" src= {`https://robohash.org/${id}?200x200`}/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n//import {robots} from './robots';\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComp = robots.map((user, i) => {\r\n    return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n  })\r\n  return (\r\n    <div>\r\n      {cardComp}\r\n    </div>\r\n  )\r\n};\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nexport default function SearchBox({searchField , searchChange}) {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='bg-lightest-blue pa3 ba b--green'\r\n        type=\"search\"\r\n        placeholder='Search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","//import Card from './components/Card';\nimport 'tachyons'\nimport robots from '../robots.json';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: robots,\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  }\n  render() {\n    const { robots, searchField } = this.state\n    const filtered = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    })\n    return !robots.length ? <h1>LOADING...</h1> :\n\n      (\n        <div className='tc'>\n          <h1>RoboBuddies</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <CardList robots={filtered} />\n        </div>\n\n      );\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div className='tc'>\n      <h1>RoboBuddies</h1>\n      <SearchBox />\n      <CardList robots={robots} />\n    </div>\n\n  );\n}\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}